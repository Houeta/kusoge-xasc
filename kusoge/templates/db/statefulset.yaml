---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
  namespace: {{ .Values.namespace }}
{{- if .Values.db.annotations }}
  annotations:
{{ toYaml .Values.db.annotations | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
  serviceName: "{{ .Chart.Name }}-{{ .Release.Name }}-db-headless"
  template:
    metadata:
      labels:
        project: {{ .Chart.Name }}
        app: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
        image: "{{ .Values.db.image.repository}}:{{ .Values.db.image.tag }}"
{{- if or .Values.db.env .Values.db.secrets }}
        env:
{{- end }}
{{- if .Values.db.env }}
        {{- range $key, $val := .Values.db.env }}
        - name: {{ $key | quote }}
          value: {{ $val | quote }}
        {{- end }}
{{- end }}
{{- if .Values.db.secrets }}
        {{- range $key, $val := .Values.db.secrets }}
        - name: {{ $key |quote }}
          valueFrom:
            secretKeyRef:
              name: "secret-store"
              key: {{ $val }}
        {{- end }}
{{- end }}
{{- if .Values.db.resources }}
        resources:
{{ toYaml .Values.db.resources | indent 10 }}
{{- else }}
        resources:
{{ toYaml .Values.global.resources | indent 10 }}
{{- end }}
        ports:
        - containerPort: {{ .Values.db.port }}
{{- if .Values.liveness_exec }}
        livenessProbe:
          exec:
{{ toYaml .Values.db.liveness_exec }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
{{- end }}
        volumeMounts:
        - name: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
          mountPath: /data
        - name: init-db
          mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-db
          configMap:
            name: "{{ .Chart.Name }}-{{ .Release.Name }}-init-sql"
  volumeClaimTemplates:
  - metadata:
      name: "{{ .Chart.Name }}-{{ .Release.Name }}-db"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.db.storage_capacity | default "1Gi" }}